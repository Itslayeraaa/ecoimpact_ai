import streamlit as st
import pandas as pd
import altair as alt
from io import BytesIO
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.colors import HexColor

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="EcoImpact AI Premium", page_icon="üå±", layout="centered")

# --- T√≠tulo y descripci√≥n con estilo ---
st.markdown(
    "<h1 style='color: #1B5E20; font-family: Helvetica; text-align: center;'>üå± EcoImpact AI Premium</h1>",
    unsafe_allow_html=True
)
st.markdown(
    "<p style='color: #333333; font-family: Helvetica; text-align: center;'>Calculadora de impacto ambiental con simulaci√≥n de reducci√≥n y PDF profesional</p>",
    unsafe_allow_html=True
)

# --- Entradas de usuario ---
st.subheader("üì• Datos de la empresa")
energia = st.number_input("Consumo de energ√≠a (kWh/mes)", min_value=0.0, key="energia", value=1200.0)
combustible = st.number_input("Combustible usado (litros/mes)", min_value=0.0, key="combustible", value=50.0)
residuos = st.number_input("Residuos generados (kg/mes)", min_value=0.0, key="residuos", value=150.0)
transporte = st.number_input("Distancia transporte (km/mes)", min_value=0.0, key="transporte", value=300.0)

# --- Sliders de reducci√≥n ---
st.subheader("‚ö° Simulaci√≥n de reducci√≥n de emisiones")
reduccion_energia = st.slider("Reducir consumo de energ√≠a (%)", 0, 50, 0)
reduccion_combustible = st.slider("Reducir combustible (%)", 0, 50, 0)
reduccion_residuos = st.slider("Reducir residuos (%)", 0, 50, 0)
reduccion_transporte = st.slider("Reducir transporte (%)", 0, 50, 0)

# Aplicar reducciones
energia *= (1 - reduccion_energia / 100)
combustible *= (1 - reduccion_combustible / 100)
residuos *= (1 - reduccion_residuos / 100)
transporte *= (1 - reduccion_transporte / 100)

# --- Bot√≥n para calcular ---
if st.button("üíö Calcular impacto"):
    # Factores de emisi√≥n
    FE_ENERGIA = 0.233
    FE_COMBUSTIBLE = 2.68
    FE_RESIDUOS = 1.9
    FE_TRANSPORTE = 0.12

    # Calcular emisiones por categor√≠a
    detalle = {
        "Categor√≠a": ["Energ√≠a", "Combustible", "Residuos", "Transporte"],
        "Emisiones (kg CO‚ÇÇe)": [
            energia * FE_ENERGIA,
            combustible * FE_COMBUSTIBLE,
            residuos * FE_RESIDUOS,
            transporte * FE_TRANSPORTE
        ]
    }

    df = pd.DataFrame(detalle)
    total = df["Emisiones (kg CO‚ÇÇe)"].sum()

    # --- Mostrar resultados ---
    st.markdown(f"<h2 style='color: #1B5E20;'>Emisiones totales: {total:.2f} kg CO‚ÇÇe</h2>", unsafe_allow_html=True)
    
    # Tabla con color seg√∫n emisiones
    st.subheader("üìä Detalle por categor√≠a")
    st.dataframe(df.style.format({"Emisiones (kg CO‚ÇÇe)": "{:.2f}"}).bar(subset=["Emisiones (kg CO‚ÇÇe)"], color='#2E7D32'))

    # Gr√°fico de barras premium con colores degradados
    chart = alt.Chart(df).mark_bar().encode(
        x='Categor√≠a',
        y='Emisiones (kg CO‚ÇÇe)',
        color=alt.Color('Emisiones (kg CO‚ÇÇe)', scale=alt.Scale(scheme='greens')),
        tooltip=['Categor√≠a', 'Emisiones (kg CO‚ÇÇe)']
    ).properties(width=600, height=400)
    st.altair_chart(chart, use_container_width=True)

    # --- Generar PDF premium ---
    buffer = BytesIO()
    c = canvas.Canvas(buffer, pagesize=letter)
    width, height = letter

    # T√≠tulo PDF
    c.setFont("Helvetica-Bold", 20)
    c.setFillColor(HexColor("#1B5E20"))
    c.drawString(50, height - 50, "üå± EcoImpact AI - Informe Premium")

    # Total de emisiones
    c.setFont("Helvetica-Bold", 14)
    c.setFillColor(HexColor("#000000"))
    c.drawString(50, height - 90, f"Emisiones totales: {total:.2f} kg CO‚ÇÇe")

    # Detalle por categor√≠a
    y = height - 130
    c.setFont("Helvetica", 12)
    for i in range(len(df)):
        c.drawString(50, y, f"{df['Categor√≠a'][i]}: {df['Emisiones (kg CO‚ÇÇe)'][i]:.2f} kg CO‚ÇÇe")
        y -= 20

    # Nota final
    c.setFont("Helvetica-Oblique", 10)
    c.setFillColor(HexColor("#555555"))
    c.drawString(50, y-20, "Informe generado por EcoImpact AI Premium")

    c.save()
    buffer.seek(0)

    st.download_button(
        label="üìÑ Descargar informe PDF Premium",
        data=buffer,
        file_name="EcoImpactAI_Premium.pdf",
        mime="application/pdf"
    )

# --- Informaci√≥n de ejemplo ---
st.info("üí° Ejemplo de datos: Oficina peque√±a ‚Üí Energ√≠a: 1200 kWh, Combustible: 50 L, Transporte: 300 km, Residuos: 150 kg")
